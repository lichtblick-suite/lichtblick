export declare const ros_lib_filename = "ros/index.d.ts";
export declare const ros_lib_dts = "\n  export declare interface Duration {\n    sec: number;\n    nsec: number;\n  }\n\n  export declare interface Time {\n    sec: number;\n    nsec: number;\n  }\n\n  // Once a data source Messages will be populated with interfaces matching the data source messages.\n  export declare namespace Messages {}\n\n  // Once a data source TopicsToMessageDefinition will be populated with topic names to message interfaces.\n  export declare interface TopicsToMessageDefinition {}\n\n  /**\n   * To correctly type your inputs, you use this type to refer to specific\n   * input topics, e.g. 'Input<\"/your_input_topic\">'. If you have\n   * multiple input topics, use a union type, e.g.\n   * 'Input<\"/your_input_topic_1\"> |\n   * Input<\"/your_input_topic_2\">'.\n   *\n   * These types are dynamically generated from the bag(s) currently in your\n   * Lichtblick session, so if a datatype changes, your User Script\n   * may not compile on the newly formatted bag.\n   */\n  export declare interface Input<T extends keyof TopicsToMessageDefinition> {\n    topic: T;\n    receiveTime: Time;\n    message: TopicsToMessageDefinition[T];\n  }\n\n";
